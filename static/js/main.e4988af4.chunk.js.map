{"version":3,"sources":["redux/actions.js","redux/types.js","comps/newNoteConfig.js","comps/Header.js","comps/NoteListing.js","comps/NoteListings.js","comps/NoteViewer.js","comps/Main.js","comps/Footer.js","comps/AddNote.js","comps/LoadScreen.js","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["addNote","noteData","type","payload","deleteNote","noteId","loadNote","id","uniqId","title","body","create_date","Date","modified_date","locked","connect","props","useState","anchor","setAnchor","AppBar","Toolbar","Typography","style","flex","IconButton","onClick","e","currentTarget","aria-controls","edge","color","MoreVert","Menu","anchorEl","open","Boolean","onClose","MenuItem","newNote","newNoteConfig","dispatch","Container","marginTop","align","variant","fontStyle","display","state","notes","data","handlePrimaryClick","Grid","item","xs","md","Card","CardActionArea","CardContent","variantMapping","h4","moment","format","getFullYear","fromNow","Divider","Box","mt","length","substr","CardActions","Button","isOpen","isViewerOpen","setNotes","useEffect","container","spacing","alignItems","map","i","key","width","p","m","noteLoaded","timer","setTimer","fieldValues","setFieldValues","handleBackClick","clearTimeout","saveCheck","handleChange","target","getAttribute","value","currentId","setTimeout","Dialog","fullScreen","transitionDuration","ArrowBack","Lock","LockOpen","idToDelete","Delete","TextField","fullWidth","multiline","placeholder","defaultValue","autoFocus","InputProps","disableUnderline","fontSize","fontWeight","onChange","gutterBottom","lineHeight","Main","margin","Footer","Fab","position","right","bottom","Edit","LoadScreen","enter","exit","disableEscapeKeyDown","disableBackdropClick","height","flexDirection","justifyContent","pb","CircularProgress","size","pt","isLoading","setIsLoading","localStorage","getItem","notesToLoad","JSON","parse","filter","loadNotes","setItem","stringify","initialState","createStore","action","concat","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.e4988af4.chunk.js","sourcesContent":["import {\n  ADD_NOTE,\n  UPDATE_NOTE,\n  DELETE_NOTE,\n  TOGGLE_VIEWER,\n  LOAD_NOTE,\n  LOAD_NOTES,\n} from \"./types\";\n\nexport const loadNotes = (notes) => ({\n  type: LOAD_NOTES,\n  payload: notes,\n});\n\nexport const addNote = (noteData) => ({\n  type: ADD_NOTE,\n  payload: noteData,\n});\n\nexport const updateNote = (noteData) => ({\n  type: UPDATE_NOTE,\n  payload: noteData,\n});\n\nexport const deleteNote = (noteId) => ({\n  type: DELETE_NOTE,\n  payload: noteId,\n});\n\nexport const loadNote = (noteId) => ({\n  type: LOAD_NOTE,\n  payload: noteId,\n});\n\nexport const toggleViewer = () => ({\n  type: TOGGLE_VIEWER,\n});\n","export const TOGGLE_VIEWER = \"TOGGLE_VIEWER\";\nexport const LOAD_NOTE = \"LOAD_NOTE\";\nexport const LOAD_NOTES = \"LOAD_NOTES\";\nexport const UPDATE_NOTE = \"UPDATE_NOTE\";\nexport const DELETE_NOTE = \"DELETE_NOTE\";\nexport const ADD_NOTE = \"ADD_NOTE\";\n","import uniqId from \"uniqid\";\n\nexport default () => ({\n  id: uniqId(),\n  title: \"\",\n  body: \"\",\n  create_date: new Date(),\n  modified_date: null,\n  locked: false,\n});\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addNote, loadNote, toggleViewer } from \"../redux/actions\";\nimport newNoteConfig from \"./newNoteConfig\";\nimport {\n  Container,\n  IconButton,\n  Typography,\n  AppBar,\n  Toolbar,\n  Menu,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { MoreVert } from \"@material-ui/icons\";\n\nconst Header = (props) => {\n  const [anchor, setAnchor] = useState(false);\n\n  const handleClick = (e) => {\n    setAnchor(e.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchor(null);\n  };\n\n  const handleNewNoteClick = () => {\n    setAnchor(null);\n    const newNote = newNoteConfig();\n    props.dispatch(addNote(newNote));\n    props.dispatch(loadNote(newNote.id));\n    props.dispatch(toggleViewer());\n  };\n\n  return (\n    <header>\n      <AppBar>\n        <Toolbar>\n          <Typography>Main Menu</Typography>\n          <span style={{ flex: 1 }} />\n          <IconButton\n            onClick={handleClick}\n            aria-controls=\"mainmenu\"\n            edge=\"end\"\n            color=\"inherit\"\n          >\n            <MoreVert />\n          </IconButton>\n          <Menu\n            id=\"mainmenu\"\n            anchorEl={anchor}\n            open={Boolean(anchor)}\n            onClose={handleClose}\n          >\n            <MenuItem onClick={handleNewNoteClick}>New note</MenuItem>\n          </Menu>\n        </Toolbar>\n      </AppBar>\n      <Container style={{ marginTop: \"6rem\" }}>\n        <Typography align=\"center\" variant=\"h1\">\n          Notes\n        </Typography>\n        <Typography\n          align=\"center\"\n          variant=\"subtitle1\"\n          color=\"textSecondary\"\n          style={{ fontStyle: \"italic\" }}\n        >\n          \"Either write something worth reading or do something worth writing.\"\n          <span style={{ display: \"block\" }}>Benjamin Franklin</span>\n        </Typography>\n      </Container>\n    </header>\n  );\n};\n\nexport default connect()(Header);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { toggleViewer, loadNote, deleteNote } from \"../redux/actions\";\nimport {\n  Box,\n  Card,\n  CardActions,\n  CardActionArea,\n  CardContent,\n  Button,\n  Typography,\n  Divider,\n  Grid,\n} from \"@material-ui/core\";\n\nimport moment from \"moment\";\n\nconst NoteListing = (props) => {\n  const { id, title, create_date, modified_date, body } = props.data;\n\n  const excerpt = () => {\n    return body.length > 50 ? body.substr(0, 50) + \"...\" : body;\n  };\n\n  const handlePrimaryClick = () => {\n    props.dispatch(loadNote(props.data.id));\n    props.dispatch(toggleViewer());\n  };\n\n  const handleDeleteClick = () => {\n    props.dispatch(deleteNote(id));\n  };\n\n  return (\n    <Grid item xs={12} md={6}>\n      <Card>\n        <CardActionArea onClick={handlePrimaryClick}>\n          <CardContent>\n            <Typography variant=\"h4\" variantMapping={{ h4: \"h2\" }}>\n              {title}\n            </Typography>\n            <Typography\n              variant=\"caption\"\n              color=\"textSecondary\"\n              display=\"inline\"\n            >\n              {`${moment(create_date).format(\"D MMMM\")} ${\n                new Date(create_date).getFullYear() === new Date().getFullYear()\n                  ? \"\"\n                  : create_date.getFullYear()\n              } ${moment(create_date).format(\"HH:mm\")}`}\n            </Typography>\n            {` `}\n            <Typography\n              variant=\"caption\"\n              color=\"textSecondary\"\n              display=\"inline\"\n            >\n              {modified_date ? (\n                <em>(Modified {moment(modified_date).fromNow()})</em>\n              ) : null}\n            </Typography>\n            <Divider />\n            <Box mt={2}>\n              <Typography variant=\"body1\">{excerpt()}</Typography>\n            </Box>\n          </CardContent>\n        </CardActionArea>\n        <Divider />\n        <CardActions>\n          <Button color=\"primary\" onClick={handlePrimaryClick}>\n            View / Edit\n          </Button>\n          <Button color=\"secondary\" onClick={handleDeleteClick}>\n            Delete\n          </Button>\n        </CardActions>\n      </Card>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  notes: state.notes,\n});\n\nexport default connect(mapStateToProps)(NoteListing);\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addNote, loadNote, toggleViewer } from \"../redux/actions\";\nimport newNoteConfig from \"./newNoteConfig\";\nimport NoteListing from \"./NoteListing\";\nimport { Box, Grid, Container, Typography, Button } from \"@material-ui/core\";\n\nconst NoteListings = (props) => {\n  const [notes, setNotes] = useState(null);\n\n  useEffect(() => {\n    if (!props.isOpen) {\n      setNotes(props.notes);\n    }\n  }, [props]);\n\n  const handleClick = () => {\n    const newNote = newNoteConfig();\n    props.dispatch(addNote(newNote));\n    props.dispatch(loadNote(newNote.id));\n    props.dispatch(toggleViewer());\n  };\n\n  return (\n    <Container>\n      <Grid container spacing={4} alignItems=\"center\">\n        {notes && notes.length > 0 ? (\n          notes.map((i) => {\n            return <NoteListing key={i.id} data={i} />;\n          })\n        ) : (\n          <Box align=\"center\" width=\"1\" p={5}>\n            <Typography>You don't have any notes yet...</Typography>\n            <Box m={1}>\n              <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                onClick={handleClick}\n              >\n                Add Note\n              </Button>\n            </Box>\n          </Box>\n        )}\n      </Grid>\n    </Container>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  notes: state.notes,\n  isOpen: state.isViewerOpen,\n});\n\nexport default connect(mapStateToProps)(NoteListings);\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  toggleViewer,\n  updateNote,\n  deleteNote,\n  loadNote,\n} from \"../redux/actions\";\nimport {\n  Dialog,\n  Container,\n  AppBar,\n  Toolbar,\n  IconButton,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport { ArrowBack, LockOpen, Lock, Delete } from \"@material-ui/icons\";\nimport moment from \"moment\";\n\nconst NoteViewer = (props) => {\n  const [timer, setTimer] = useState(0);\n  const [fieldValues, setFieldValues] = useState({\n    title: \"\",\n    body: \"\",\n    locked: false,\n  });\n\n  const handleBackClick = () => {\n    clearTimeout(timer);\n    saveCheck();\n    props.dispatch(toggleViewer());\n  };\n\n  const saveCheck = () => {\n    if (\n      props.noteLoaded.title !== fieldValues.title ||\n      props.noteLoaded.body !== fieldValues.body ||\n      props.noteLoaded.locked !== fieldValues.locked\n    ) {\n      props.dispatch(\n        updateNote({\n          ...props.noteLoaded,\n          title: fieldValues.title,\n          body: fieldValues.body,\n          locked: fieldValues.locked,\n          modified_date: new Date(),\n        })\n      );\n    }\n  };\n\n  const handleChange = (e) => {\n    if (!fieldValues.locked) {\n      setFieldValues({\n        ...fieldValues,\n        [e.target.getAttribute(\"id\")]: e.target.value,\n      });\n    }\n  };\n\n  const handleDeleteClick = () => {\n    const idToDelete = props.noteLoaded.id;\n    props.dispatch(toggleViewer());\n    props.dispatch(loadNote(null));\n    props.dispatch(deleteNote(idToDelete));\n  };\n\n  const handleLockClick = () => {\n    setFieldValues({\n      ...fieldValues,\n      locked: !fieldValues.locked,\n    });\n  };\n\n  useEffect(() => {\n    if (props.noteLoaded) {\n      setFieldValues({\n        title: props.noteLoaded.title,\n        body: props.noteLoaded.body,\n        locked: props.noteLoaded.locked,\n      });\n    }\n  }, [props.noteLoaded]);\n\n  useEffect(() => {\n    if (!props.isOpen && props.noteLoaded) {\n      const currentId = props.noteLoaded.id;\n      props.dispatch(loadNote(null));\n      if (fieldValues.title.length === 0 && fieldValues.body.length === 0) {\n        props.dispatch(deleteNote(currentId));\n      }\n    }\n    // eslint-disable-next-line\n  }, [props.isOpen]);\n\n  useEffect(() => {\n    if (props.noteLoaded) {\n      clearTimeout(timer);\n      setTimer(\n        setTimeout(() => {\n          saveCheck();\n        }, 5000)\n      );\n    }\n    // eslint-disable-next-line\n  }, [fieldValues]);\n\n  return props.noteLoaded ? (\n    <Dialog open={props.isOpen} fullScreen transitionDuration={500}>\n      <AppBar>\n        <Toolbar>\n          <IconButton color=\"inherit\" edge=\"start\" onClick={handleBackClick}>\n            <ArrowBack />\n          </IconButton>\n          <Typography onClick={handleBackClick}>Back to main menu</Typography>\n          <span style={{ flex: 1 }} />\n          <IconButton color=\"inherit\" onClick={handleLockClick}>\n            {fieldValues.locked ? <Lock /> : <LockOpen />}\n          </IconButton>\n          <IconButton color=\"inherit\" onClick={handleDeleteClick} edge=\"end\">\n            <Delete />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Container style={{ marginTop: \"6rem\" }}>\n        <TextField\n          fullWidth\n          multiline\n          placeholder=\"Title\"\n          id=\"title\"\n          defaultValue={props.noteLoaded.title}\n          autoFocus={props.noteLoaded.title.length === 0 ? true : false}\n          InputProps={{\n            disableUnderline: fieldValues.title.length === 0 ? false : true,\n            style: { fontSize: \"3rem\", fontWeight: 300 },\n          }}\n          onChange={handleChange}\n          value={fieldValues.title}\n        />\n        <Typography variant=\"subtitle1\" color=\"textSecondary\" gutterBottom>\n          {`${moment(props.noteLoaded.create_date).format(\"D MMMM\")} ${\n            new Date(props.noteLoaded.create_date).getFullYear() ===\n            new Date().getFullYear()\n              ? \"\"\n              : props.noteLoaded.create_date.getFullYear()\n          } ${moment(props.noteLoaded.create_date).format(\"HH:mm\")}`}\n        </Typography>\n        <TextField\n          fullWidth\n          multiline\n          placeholder=\"Write your note here...\"\n          id=\"body\"\n          defaultValue={props.noteLoaded.body}\n          value={fieldValues.body}\n          onChange={handleChange}\n          InputProps={{\n            disableUnderline: fieldValues.body.length === 0 ? false : true,\n            style: { fontSize: \"1rem\", fontWeight: 400, lineHeight: 1.5 },\n          }}\n        />\n      </Container>\n    </Dialog>\n  ) : null;\n};\nconst mapStateToProps = (state) => ({\n  isOpen: state.isViewerOpen,\n  noteLoaded: state.noteLoaded,\n  notes: state.notes,\n});\nexport default connect(mapStateToProps)(NoteViewer);\n","import React from \"react\";\n\nimport NoteListings from \"./NoteListings\";\nimport NoteViewer from \"./NoteViewer\";\n\nconst Main = () => {\n  return (\n    <main style={{ margin: \"2rem 0\" }}>\n      <NoteListings />\n      <NoteViewer />\n    </main>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\nimport { Container, Typography } from \"@material-ui/core\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Typography\n          align=\"center\"\n          color=\"textSecondary\"\n          display=\"block\"\n          variant=\"overline\"\n        >\n          &copy; 2020{\" \"}\n          {new Date().getFullYear() === 2020\n            ? null\n            : ` - ${new Date().getFullYear()} `}\n          David Andrews\n        </Typography>\n      </Container>{\" \"}\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { toggleViewer, addNote, loadNote } from \"../redux/actions\";\nimport newNoteConfig from \"./newNoteConfig\";\nimport { Fab } from \"@material-ui/core\";\nimport { Edit } from \"@material-ui/icons\";\n\nconst AddNote = (props) => {\n  const handleClick = () => {\n    const newNote = newNoteConfig();\n    props.dispatch(addNote(newNote));\n    props.dispatch(loadNote(newNote.id));\n    props.dispatch(toggleViewer());\n  };\n\n  return (\n    <Fab\n      color=\"secondary\"\n      style={{\n        position: \"fixed\",\n        right: \"3rem\",\n        bottom: \"3rem\",\n      }}\n      onClick={handleClick}\n    >\n      <Edit />\n    </Fab>\n  );\n};\n\nexport default connect()(AddNote);\n","import React from \"react\";\nimport { Dialog, Box, Typography, CircularProgress } from \"@material-ui/core\";\nconst LoadScreen = () => {\n  return (\n    <Dialog\n      fullScreen\n      open={true}\n      transitionDuration={{ enter: 0, exit: 500 }}\n      disableEscapeKeyDown\n      disableBackdropClick\n    >\n      <Box\n        width=\"100%\"\n        height=\"100%\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        pb={3}\n      >\n        <CircularProgress size={80} />\n        <Box display=\"block\" pt={1}>\n          <Typography>Loading notes...</Typography>\n        </Box>\n      </Box>\n    </Dialog>\n  );\n};\n\nexport default LoadScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { loadNotes } from \"./redux/actions\";\nimport \"./App.css\";\nimport Header from \"./comps/Header\";\nimport Main from \"./comps/Main\";\nimport Footer from \"./comps/Footer\";\nimport AddNote from \"./comps/AddNote\";\nimport LoadScreen from \"./comps/LoadScreen\";\n\nfunction App(props) {\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    if (localStorage.getItem(\"daves_notes_app\")) {\n      const notes = JSON.parse(localStorage.getItem(\"daves_notes_app\"));\n      const notesToLoad = notes.filter((i) => {\n        return i.title.length > 0 && i.body.length > 0 ? i : null;\n      });\n      props.dispatch(loadNotes(notesToLoad));\n      setTimeout(() => {\n        setIsLoading(false);\n      }, 500);\n    } else {\n      setIsLoading(false);\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"daves_notes_app\", JSON.stringify(props.notes));\n  }, [props.notes]);\n\n  return (\n    <>\n      {isLoading ? <LoadScreen /> : null}\n      <Header />\n      <Main />\n      <Footer />\n      <AddNote />\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  notes: state.notes,\n});\nexport default connect(mapStateToProps)(App);\n","import {\n  ADD_NOTE,\n  TOGGLE_VIEWER,\n  LOAD_NOTE,\n  LOAD_NOTES,\n  UPDATE_NOTE,\n  DELETE_NOTE,\n} from \"./types\";\n\nconst initialState = {\n  isViewerOpen: false,\n  noteLoaded: null,\n  notes: [],\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_NOTES:\n      return {\n        ...state,\n        notes: action.payload,\n      };\n    case ADD_NOTE:\n      return {\n        ...state,\n        notes: state.notes.concat([action.payload]),\n      };\n    case LOAD_NOTE:\n      return {\n        ...state,\n        noteLoaded: state.notes.filter((i) => {\n          return i.id === action.payload ? i : null;\n        })[0],\n      };\n    case DELETE_NOTE:\n      return {\n        ...state,\n        notes: state.notes.filter((i) => {\n          return i.id !== action.payload ? i : null;\n        }),\n      };\n    case UPDATE_NOTE:\n      return {\n        ...state,\n        notes: state.notes.map((i) => {\n          return i.id === action.payload.id ? action.payload : i;\n        }),\n      };\n    case TOGGLE_VIEWER:\n      return {\n        ...state,\n        isViewerOpen: !state.isViewerOpen,\n      };\n    default:\n      return state;\n  }\n};\n","import { createStore } from \"redux\";\nimport reducer from \"./reducer\";\n\nexport default createStore(reducer);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}